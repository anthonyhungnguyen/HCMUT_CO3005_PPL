Program([FuncDecl(Id(main),[],IntType,Block([VarDecl(c,StringType),VarDecl(isLowercaseVowel,IntType),VarDecl(isUppercaseVowel,IntType),CallExpr(Id(printf),[StringLiteral(Enter an alphabet: )]),CallExpr(Id(scanf),[StringLiteral(%c),Id(c)]),BinaryOp(=,Id(isLowercaseVowel),BinaryOp(||,BinaryOp(||,BinaryOp(||,BinaryOp(||,BinaryOp(==,Id(c),StringLiteral(a)),BinaryOp(==,Id(c),StringLiteral(e))),BinaryOp(==,Id(c),StringLiteral(i))),BinaryOp(==,Id(c),StringLiteral(o))),BinaryOp(==,Id(c),StringLiteral(u)))),BinaryOp(=,Id(isUppercaseVowel),BinaryOp(||,BinaryOp(||,BinaryOp(||,BinaryOp(||,BinaryOp(==,Id(c),StringLiteral(A)),BinaryOp(==,Id(c),StringLiteral(E))),BinaryOp(==,Id(c),StringLiteral(I))),BinaryOp(==,Id(c),StringLiteral(O))),BinaryOp(==,Id(c),StringLiteral(U)))),If(BinaryOp(||,Id(isLowercaseVowel),Id(isUppercaseVowel)),CallExpr(Id(printf),[StringLiteral(%c is a vowel.),Id(c)]),CallExpr(Id(printf),[StringLiteral(%c is a consonant.),Id(c)])),Return(IntLiteral(0))]))])